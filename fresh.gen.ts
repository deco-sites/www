// DO NOT EDIT. This file is generated by deco.
// This file SHOULD be checked into source version control.
// This file is automatically updated during development when running `dev.ts`.

import config from "./deno.json" assert { type: "json" };
import { context } from "$live/live.ts";
import { DecoManifest } from "$live/types.ts";
import * as $0 from "./routes/[...catchall].tsx";
import * as $1 from "./routes/_404.tsx";
import * as $2 from "./routes/_500.tsx";
import * as $3 from "./routes/_app.tsx";
import * as $4 from "./routes/_middleware.ts";
import * as $5 from "./routes/admin/[...catchall].tsx";
import * as $6 from "./routes/api/leads.tsx";
import * as $7 from "./routes/index.tsx";
import * as $8 from "./routes/live/[...catchall].tsx";
import * as $$0 from "./islands/LiveControls.tsx";
import * as $$1 from "./islands/TeamSlide.tsx";
import * as $$$0 from "./sections/Architecture.tsx";
import * as $$$1 from "./sections/BlogPostHeader.tsx";
import * as $$$2 from "./sections/BlogPostList.tsx";
import * as $$$3 from "./sections/Edit.tsx";
import * as $$$4 from "./sections/Footer.tsx";
import * as $$$5 from "./sections/Head.tsx";
import * as $$$6 from "./sections/Header.tsx";
import * as $$$7 from "./sections/Hero.tsx";
import * as $$$8 from "./sections/Layout.tsx";
import * as $$$9 from "./sections/Markdown.tsx";
import * as $$$10 from "./sections/Newsletter.tsx";
import * as $$$11 from "./sections/Performance.tsx";
import * as $$$12 from "./sections/Platform.tsx";
import * as $$$13 from "./sections/Pricing.tsx";
import * as $$$14 from "./sections/QuillText.tsx";
import * as $$$15 from "./sections/TeamSection.tsx";
import * as $$$16 from "deco-sites/std/sections/SEO.tsx";
import * as $$$17 from "deco-sites/std/sections/SEOPDP.tsx";
import * as $$$18 from "deco-sites/std/sections/SEOPLP.tsx";
import * as $$$19 from "deco-sites/std/sections/configOCC.global.tsx";
import * as $$$20 from "deco-sites/std/sections/configShopify.global.tsx";
import * as $$$21 from "deco-sites/std/sections/configVTEX.global.tsx";
import * as $$$$0 from "./functions/LoadGitHubRaw.ts";
import * as $$$$1 from "./functions/LoadPageProps.ts";
import * as $$$$2 from "./functions/MatchSiteParam.ts";
import * as $$$$3 from "$live/functions/EffectSelectPage.ts";
import * as $$$$4 from "$live/functions/MatchDate.ts";
import * as $$$$5 from "$live/functions/MatchEnvironment.ts";
import * as $$$$6 from "$live/functions/MatchRandom.ts";
import * as $$$$7 from "$live/functions/MatchSite.ts";
import * as $$$$8 from "$live/functions/MatchUserAgent.ts";
import * as $$$$9 from "deco-sites/std/functions/occProductDetailsPage.ts";
import * as $$$$10 from "deco-sites/std/functions/shopifyProductDetailsPage.ts";
import * as $$$$11 from "deco-sites/std/functions/shopifyProductList.ts";
import * as $$$$12 from "deco-sites/std/functions/shopifyProductListingPage.ts";
import * as $$$$13 from "deco-sites/std/functions/vtexLegacyProductDetailsPage.ts";
import * as $$$$14 from "deco-sites/std/functions/vtexLegacyProductList.ts";
import * as $$$$15 from "deco-sites/std/functions/vtexLegacyProductListingPage.ts";
import * as $$$$16 from "deco-sites/std/functions/vtexProductDetailsPage.ts";
import * as $$$$17 from "deco-sites/std/functions/vtexProductList.ts";
import * as $$$$18 from "deco-sites/std/functions/vtexProductListingPage.ts";

const manifest: DecoManifest = {
  routes: {
    "./routes/[...catchall].tsx": $0,
    "./routes/_404.tsx": $1,
    "./routes/_500.tsx": $2,
    "./routes/_app.tsx": $3,
    "./routes/_middleware.ts": $4,
    "./routes/admin/[...catchall].tsx": $5,
    "./routes/api/leads.tsx": $6,
    "./routes/index.tsx": $7,
    "./routes/live/[...catchall].tsx": $8,
  },
  islands: {
    "./islands/LiveControls.tsx": $$0,
    "./islands/TeamSlide.tsx": $$1,
  },
  sections: {
    "./sections/Architecture.tsx": $$$0,
    "./sections/BlogPostHeader.tsx": $$$1,
    "./sections/BlogPostList.tsx": $$$2,
    "./sections/Edit.tsx": $$$3,
    "./sections/Footer.tsx": $$$4,
    "./sections/Head.tsx": $$$5,
    "./sections/Header.tsx": $$$6,
    "./sections/Hero.tsx": $$$7,
    "./sections/Layout.tsx": $$$8,
    "./sections/Markdown.tsx": $$$9,
    "./sections/Newsletter.tsx": $$$10,
    "./sections/Performance.tsx": $$$11,
    "./sections/Platform.tsx": $$$12,
    "./sections/Pricing.tsx": $$$13,
    "./sections/QuillText.tsx": $$$14,
    "./sections/TeamSection.tsx": $$$15,
    "deco-sites/std/sections/SEO.tsx": $$$16,
    "deco-sites/std/sections/SEOPDP.tsx": $$$17,
    "deco-sites/std/sections/SEOPLP.tsx": $$$18,
    "deco-sites/std/sections/configOCC.global.tsx": $$$19,
    "deco-sites/std/sections/configShopify.global.tsx": $$$20,
    "deco-sites/std/sections/configVTEX.global.tsx": $$$21,
  },
  functions: {
    "./functions/LoadGitHubRaw.ts": $$$$0,
    "./functions/LoadPageProps.ts": $$$$1,
    "./functions/MatchSiteParam.ts": $$$$2,
    "$live/functions/EffectSelectPage.ts": $$$$3,
    "$live/functions/MatchDate.ts": $$$$4,
    "$live/functions/MatchEnvironment.ts": $$$$5,
    "$live/functions/MatchRandom.ts": $$$$6,
    "$live/functions/MatchSite.ts": $$$$7,
    "$live/functions/MatchUserAgent.ts": $$$$8,
    "deco-sites/std/functions/occProductDetailsPage.ts": $$$$9,
    "deco-sites/std/functions/shopifyProductDetailsPage.ts": $$$$10,
    "deco-sites/std/functions/shopifyProductList.ts": $$$$11,
    "deco-sites/std/functions/shopifyProductListingPage.ts": $$$$12,
    "deco-sites/std/functions/vtexLegacyProductDetailsPage.ts": $$$$13,
    "deco-sites/std/functions/vtexLegacyProductList.ts": $$$$14,
    "deco-sites/std/functions/vtexLegacyProductListingPage.ts": $$$$15,
    "deco-sites/std/functions/vtexProductDetailsPage.ts": $$$$16,
    "deco-sites/std/functions/vtexProductList.ts": $$$$17,
    "deco-sites/std/functions/vtexProductListingPage.ts": $$$$18,
  },
  schemas: {
    "./sections/Architecture.tsx": {
      "inputSchema": {
        "title": " Architecture",
        "type": "object",
        "properties": {
          "title1": {
            "type": "string",
            "title": "Title1",
          },
          "title2": {
            "type": "string",
            "title": "Title2",
          },
          "title3": {
            "type": "string",
            "title": "Title3",
          },
          "sections": {
            "title": "Sections",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "text": {
                  "type": "string",
                  "title": "Text",
                },
              },
              "required": [
                "text",
              ],
            },
          },
        },
        "required": [
          "title1",
          "title2",
          "title3",
          "sections",
        ],
      },
      "outputSchema": null,
    },
    "./sections/BlogPostHeader.tsx": {
      "inputSchema": {
        "title": " Blog Post Header",
        "type": "object",
        "properties": {
          "postList": {
            "$id": "5b1cd5713a375e18bb93e9635b8a2dc5fc2672cf",
            "format": "live-function",
            "type": "string",
            "title": "Post List",
          },
          "page": {
            "$id": "00fa23793e0af297c570d784cbee7cb3846d2533",
            "format": "live-function",
            "type": "string",
            "title": "Page",
          },
        },
        "required": [
          "postList",
          "page",
        ],
      },
      "outputSchema": null,
    },
    "./sections/BlogPostList.tsx": {
      "inputSchema": {
        "title": " Blog Post List",
        "type": "object",
        "properties": {
          "postList": {
            "$id": "5b1cd5713a375e18bb93e9635b8a2dc5fc2672cf",
            "format": "live-function",
            "type": "string",
            "title": "Post List",
          },
        },
        "required": [
          "postList",
        ],
      },
      "outputSchema": null,
    },
    "./sections/Edit.tsx": {
      "inputSchema": {
        "title": " Edit",
        "type": "object",
        "properties": {
          "targetText": {
            "type": "string",
            "title": "Target Text",
          },
          "title": {
            "type": "string",
            "title": "Title",
          },
          "highlight": {
            "type": "string",
            "title": "Highlight",
          },
          "sections": {
            "title": "Sections",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string",
                  "title": "Title",
                },
                "text": {
                  "type": "string",
                  "title": "Text",
                },
              },
              "required": [
                "title",
                "text",
              ],
            },
          },
        },
        "required": [
          "targetText",
          "title",
          "highlight",
          "sections",
        ],
      },
      "outputSchema": null,
    },
    "./sections/Footer.tsx": {
      "inputSchema": {
        "title": " Footer",
        "type": "object",
        "properties": {
          "anchor": {
            "type": "string",
            "title": "Anchor",
          },
        },
        "required": [
          "anchor",
        ],
      },
      "outputSchema": null,
    },
    "./sections/Head.tsx": {
      "inputSchema": {
        "title": " Head",
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "title": "Title",
          },
          "description": {
            "type": "string",
            "title": "Description",
          },
          "url": {
            "type": "string",
            "title": "Url",
          },
          "imageUrl": {
            "type": "string",
            "title": "Image Url",
          },
          "faviconUrl": {
            "type": [
              "string",
              "null",
            ],
            "title": "Favicon Url",
          },
          "styleUrls": {
            "type": "array",
            "items": {
              "type": "string",
            },
            "title": "Style Urls",
          },
          "themeColor": {
            "type": "string",
            "title": "Theme Color",
          },
          "origin": {
            "type": [
              "string",
              "null",
            ],
            "title": "Origin",
          },
        },
        "required": [
          "title",
          "description",
          "url",
          "imageUrl",
          "styleUrls",
          "themeColor",
        ],
      },
      "outputSchema": null,
    },
    "./sections/Header.tsx": {
      "inputSchema": {
        "title": " Header",
        "type": "object",
        "properties": {
          "logoAriaLabel": {
            "type": "string",
            "title": "Logo Aria Label",
          },
          "platformLabel": {
            "type": "string",
            "title": "Platform Label",
          },
          "priceLabel": {
            "type": "string",
            "title": "Price Label",
          },
          "campLabel": {
            "type": "string",
            "title": "Camp Label",
          },
          "campAriaLabel": {
            "type": "string",
            "title": "Camp Aria Label",
          },
          "scheduleLabel": {
            "type": "string",
            "title": "Schedule Label",
          },
        },
        "required": [
          "logoAriaLabel",
          "platformLabel",
          "priceLabel",
          "campLabel",
          "campAriaLabel",
          "scheduleLabel",
        ],
      },
      "outputSchema": null,
    },
    "./sections/Hero.tsx": {
      "inputSchema": {
        "title": " Hero",
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "title": "Title",
          },
          "titleHighlight": {
            "type": "string",
            "title": "Title Highlight",
          },
          "text1": {
            "type": "string",
            "title": "Text1",
          },
          "text2": {
            "type": "string",
            "title": "Text2",
          },
          "scheduleLabel": {
            "type": "string",
            "title": "Schedule Label",
          },
        },
        "required": [
          "title",
          "titleHighlight",
          "text1",
          "text2",
          "scheduleLabel",
        ],
      },
      "outputSchema": null,
    },
    "./sections/Layout.tsx": {
      "inputSchema": {
        "title": " Layout",
        "type": "object",
        "properties": {
          "warning": {
            "type": [
              "string",
              "null",
            ],
            "title": "Warning",
            "description":
              "This is a section with inner sections. Remove this after the editor supports it.",
          },
        },
        "required": [],
      },
      "outputSchema": null,
    },
    "./sections/Markdown.tsx": {
      "inputSchema": {
        "title": " Markdown",
        "type": "object",
        "properties": {
          "text": {
            "$id": "5b1cd5713a375e18bb93e9635b8a2dc5fc2672cf",
            "format": "live-function",
            "type": "string",
            "title": "Text",
          },
        },
        "required": [
          "text",
        ],
      },
      "outputSchema": null,
    },
    "./sections/Newsletter.tsx": {
      "inputSchema": {
        "title": " Newsletter",
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "title": "Title",
          },
          "highlight": {
            "type": "string",
            "title": "Highlight",
          },
          "nameLabel": {
            "type": "string",
            "title": "Name Label",
          },
          "emailLabel": {
            "type": "string",
            "title": "Email Label",
          },
          "positionLabel": {
            "type": "string",
            "title": "Position Label",
          },
          "linkedinLabel": {
            "type": "string",
            "title": "Linkedin Label",
          },
          "schedule": {
            "type": "string",
            "title": "Schedule",
          },
        },
        "required": [
          "title",
          "highlight",
          "nameLabel",
          "emailLabel",
          "positionLabel",
          "linkedinLabel",
          "schedule",
        ],
      },
      "outputSchema": null,
    },
    "./sections/Performance.tsx": {
      "inputSchema": {
        "title": " Performance",
        "type": "object",
        "properties": {
          "customersLabel": {
            "type": "string",
            "title": "Customers Label",
          },
          "obsession": {
            "type": "string",
            "title": "Obsession",
          },
          "highlight": {
            "type": "string",
            "title": "Highlight",
          },
          "subTitle1": {
            "type": "string",
            "title": "Sub Title1",
          },
          "subTitle2": {
            "type": "string",
            "title": "Sub Title2",
          },
          "sections": {
            "title": "Sections",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string",
                  "title": "Title",
                },
                "text": {
                  "type": "string",
                  "title": "Text",
                },
              },
              "required": [
                "title",
                "text",
              ],
            },
          },
        },
        "required": [
          "customersLabel",
          "obsession",
          "highlight",
          "subTitle1",
          "subTitle2",
          "sections",
        ],
      },
      "outputSchema": null,
    },
    "./sections/Platform.tsx": {
      "inputSchema": {
        "title": " Platform",
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "title": "Title",
          },
          "titleHighlight": {
            "type": "string",
            "title": "Title Highlight",
          },
          "forDevs": {
            "type": "string",
            "title": "For Devs",
          },
          "sections": {
            "title": "Sections",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string",
                  "title": "Title",
                },
                "text": {
                  "type": "string",
                  "title": "Text",
                },
              },
              "required": [
                "title",
                "text",
              ],
            },
          },
        },
        "required": [
          "title",
          "titleHighlight",
          "forDevs",
          "sections",
        ],
      },
      "outputSchema": null,
    },
    "./sections/Pricing.tsx": {
      "inputSchema": {
        "title": " Pricing",
        "type": "object",
        "properties": {
          "pricingTableId": {
            "type": "string",
            "title": "Pricing Table Id",
          },
          "publishableKey": {
            "type": "string",
            "title": "Publishable Key",
          },
        },
        "required": [
          "pricingTableId",
          "publishableKey",
        ],
      },
      "outputSchema": null,
    },
    "./sections/QuillText.tsx": {
      "inputSchema": {
        "title": " Quill Text",
        "type": "object",
        "properties": {
          "html": {
            "format": "html",
            "type": "string",
            "title": "Html",
          },
        },
        "required": [
          "html",
        ],
      },
      "outputSchema": null,
    },
    "./sections/TeamSection.tsx": {
      "inputSchema": {
        "title": " Team Section",
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "title": "Title",
          },
          "highlight": {
            "type": "string",
            "title": "Highlight",
          },
          "text1": {
            "type": "string",
            "title": "Text1",
          },
          "text2": {
            "type": "string",
            "title": "Text2",
          },
        },
        "required": [
          "title",
          "highlight",
          "text1",
          "text2",
        ],
      },
      "outputSchema": null,
    },
    "./functions/LoadGitHubRaw.ts": {
      "inputSchema": {
        "title": " Load Git Hub Raw",
        "type": "object",
        "properties": {
          "repo": {
            "type": "string",
            "title": "Repo",
            "description": "Complete user/repo format",
          },
          "branch": {
            "type": "string",
            "title": "Branch",
            "description": "Branch",
          },
          "path": {
            "type": [
              "string",
              "null",
            ],
            "title": "Path",
            "description":
              "Path to fetch, or leave blank and add :path route param.",
          },
        },
        "required": [
          "repo",
          "branch",
        ],
      },
      "outputSchema": {
        "type": "object",
        "properties": {
          "data": {
            "$id": "5b1cd5713a375e18bb93e9635b8a2dc5fc2672cf",
          },
        },
        "additionalProperties": true,
      },
    },
    "./functions/LoadPageProps.ts": {
      "inputSchema": {
        "title": " Load Page Props",
        "type": "object",
        "properties": {
          "null": {
            "type": [
              "string",
              "null",
            ],
            "title": "Null",
          },
        },
        "required": [],
      },
      "outputSchema": {
        "type": "object",
        "properties": {
          "data": {
            "$id": "00fa23793e0af297c570d784cbee7cb3846d2533",
          },
        },
        "additionalProperties": true,
      },
    },
    "./functions/MatchSiteParam.ts": {
      "inputSchema": {
        "title": " Match Site Param",
        "type": "object",
        "properties": {
          "siteId": {
            "type": "string",
            "title": "Site Id",
          },
        },
        "required": [
          "siteId",
        ],
      },
      "outputSchema": {
        "type": "object",
        "properties": {
          "data": {
            "$id": "c995d72dc372b1b50bf9f70943e37fc94e1ccac9",
          },
        },
        "additionalProperties": true,
      },
    },
    "$live/functions/EffectSelectPage.ts": {
      "inputSchema": {
        "title": " Effect Select Page",
        "type": "object",
        "properties": {
          "pageIds": {
            "type": "array",
            "items": {
              "type": "number",
            },
            "title": "Page Ids",
          },
        },
        "required": [
          "pageIds",
        ],
      },
      "outputSchema": null,
    },
    "$live/functions/MatchDate.ts": {
      "inputSchema": {
        "title": " Match Date",
        "type": "object",
        "properties": {
          "start": {
            "type": [
              "string",
              "null",
            ],
            "title": "Start",
            "format": "date-time",
          },
          "end": {
            "type": [
              "string",
              "null",
            ],
            "title": "End",
            "format": "date-time",
          },
          "session": {
            "type": "boolean",
            "title": "Session",
          },
        },
        "required": [
          "session",
        ],
      },
      "outputSchema": null,
    },
    "$live/functions/MatchEnvironment.ts": {
      "inputSchema": {
        "title": " Match Environment",
        "type": "object",
        "properties": {
          "environment": {
            "type": "string",
            "anyOf": [
              {
                "type": "string",
                "const": "production",
              },
              {
                "type": "string",
                "const": "development",
              },
            ],
            "title": "Environment",
          },
        },
        "required": [
          "environment",
        ],
      },
      "outputSchema": {
        "type": "object",
        "properties": {
          "data": {
            "$id": "c995d72dc372b1b50bf9f70943e37fc94e1ccac9",
          },
        },
        "additionalProperties": true,
      },
    },
    "$live/functions/MatchRandom.ts": {
      "inputSchema": {
        "title": " Match Random",
        "type": "object",
        "properties": {
          "traffic": {
            "type": "number",
            "title": "Traffic",
          },
          "session": {
            "type": "boolean",
            "title": "Session",
          },
        },
        "required": [
          "traffic",
          "session",
        ],
      },
      "outputSchema": null,
    },
    "$live/functions/MatchSite.ts": {
      "inputSchema": {
        "title": " Match Site",
        "type": "object",
        "properties": {
          "siteId": {
            "type": "number",
            "title": "Site Id",
          },
        },
        "required": [
          "siteId",
        ],
      },
      "outputSchema": {
        "type": "object",
        "properties": {
          "data": {
            "$id": "c995d72dc372b1b50bf9f70943e37fc94e1ccac9",
          },
        },
        "additionalProperties": true,
      },
    },
    "$live/functions/MatchUserAgent.ts": {
      "inputSchema": {
        "title": " Match User Agent",
        "type": "object",
        "properties": {
          "includes": {
            "type": [
              "string",
              "null",
            ],
            "title": "Includes",
          },
          "match": {
            "type": [
              "string",
              "null",
            ],
            "title": "Match",
          },
        },
        "required": [],
      },
      "outputSchema": {
        "type": "object",
        "properties": {
          "data": {
            "$id": "c995d72dc372b1b50bf9f70943e37fc94e1ccac9",
          },
        },
        "additionalProperties": true,
      },
    },
    "deco-sites/std/sections/SEO.tsx": {
      "inputSchema": {
        "title": " S E O",
        "type": "object",
        "properties": {
          "title": {
            "type": [
              "string",
              "null",
            ],
            "title": "Title",
          },
          "description": {
            "type": [
              "string",
              "null",
            ],
            "title": "Description",
          },
          "url": {
            "type": [
              "string",
              "null",
            ],
            "title": "Url",
          },
          "imageUrl": {
            "type": [
              "string",
              "null",
            ],
            "title": "Image Url",
          },
          "themeColor": {
            "type": [
              "string",
              "null",
            ],
            "title": "Theme Color",
          },
        },
        "required": [],
      },
      "outputSchema": null,
    },
    "deco-sites/std/sections/SEOPDP.tsx": {
      "inputSchema": {
        "title": " S E O P D P",
        "type": "object",
        "properties": {
          "page": {
            "$id": "906909daeb7d99a3eb0e05ff52e42d7b9c5b298a",
            "format": "live-function",
            "type": "string",
            "title": "Page",
          },
          "titleTemplate": {
            "type": "string",
            "title": "Title template",
            "description":
              "add a %s whenever you want it to be replaced with the product name",
            "default": "%s | Fashion Store",
          },
          "description": {
            "type": [
              "string",
              "null",
            ],
            "title": "Meta tag description",
            "description":
              "If not set, the product description will be used instead",
          },
          "themeColor": {
            "type": [
              "string",
              "null",
            ],
            "title": "Theme Color",
          },
        },
        "required": [
          "page",
          "titleTemplate",
        ],
      },
      "outputSchema": null,
    },
    "deco-sites/std/sections/SEOPLP.tsx": {
      "inputSchema": {
        "title": " S E O P L P",
        "type": "object",
        "properties": {
          "page": {
            "$id": "4246b2b7d22c6a301356a5b3c9c5d48523654a0f",
            "format": "live-function",
            "type": "string",
            "title": "Page",
          },
          "title": {
            "type": [
              "string",
              "null",
            ],
            "title": "Title",
          },
          "description": {
            "type": [
              "string",
              "null",
            ],
            "title": "Description",
          },
          "url": {
            "type": [
              "string",
              "null",
            ],
            "title": "Url",
          },
          "imageUrl": {
            "type": [
              "string",
              "null",
            ],
            "title": "Image Url",
          },
          "themeColor": {
            "type": [
              "string",
              "null",
            ],
            "title": "Theme Color",
          },
        },
        "required": [
          "page",
        ],
      },
      "outputSchema": null,
    },
    "deco-sites/std/sections/configOCC.global.tsx": {
      "inputSchema": {
        "title": "Config O C C.global",
        "type": "object",
        "properties": {
          "baseUrl": {
            "type": "string",
            "title": "Base Url",
          },
          "nrpp": {
            "type": [
              "string",
              "null",
            ],
            "title": "Nrpp",
          },
        },
        "required": [
          "baseUrl",
        ],
      },
      "outputSchema": null,
    },
    "deco-sites/std/sections/configShopify.global.tsx": {
      "inputSchema": {
        "title": "Config Shopify.global",
        "type": "object",
        "properties": {
          "storeName": {
            "type": "string",
            "title": "Store Name",
            "description": "Shopify store name.",
          },
          "storefrontAccessToken": {
            "type": "string",
            "title": "Storefront Access Token",
            "description": "Shopify storefront access token.",
          },
        },
        "required": [
          "storeName",
          "storefrontAccessToken",
        ],
      },
      "outputSchema": null,
    },
    "deco-sites/std/sections/configVTEX.global.tsx": {
      "inputSchema": {
        "title": "Config V T E X.global",
        "type": "object",
        "properties": {
          "account": {
            "type": "string",
            "title": "Account",
            "description":
              "VTEX Account name. For more info, read here: https://help.vtex.com/en/tutorial/o-que-e-account-name--i0mIGLcg3QyEy8OCicEoC.",
          },
          "defaultLocale": {
            "type": "string",
            "title": "Default Locale",
            "description": "Locale used for VTEX Intelligent Search client.",
          },
          "defaultPriceCurrency": {
            "type": "string",
            "title": "Default Price Currency",
            "description": "Default price currency.",
            "default": "USD",
          },
          "defaultSalesChannel": {
            "type": "string",
            "title": "Default Sales Channel",
            "description":
              "VTEX sales channel. This will be the default sales channel your site. For more info, read here: https://help.vtex.com/tutorial/how-trade-policies-work--6Xef8PZiFm40kg2STrMkMV",
          },
          "defaultRegionId": {
            "type": [
              "string",
              "null",
            ],
            "title": "Default Region Id",
          },
          "defaultHideUnnavailableItems": {
            "type": [
              "boolean",
              "null",
            ],
            "title": "Default Hide Unnavailable Items",
          },
        },
        "required": [
          "account",
          "defaultLocale",
          "defaultPriceCurrency",
          "defaultSalesChannel",
        ],
      },
      "outputSchema": null,
    },
    "deco-sites/std/functions/occProductDetailsPage.ts": {
      "inputSchema": {
        "type": "null",
        "title": "Occ Product Details Page",
      },
      "outputSchema": {
        "type": "object",
        "properties": {
          "data": {
            "$id": "906909daeb7d99a3eb0e05ff52e42d7b9c5b298a",
          },
        },
        "additionalProperties": true,
      },
    },
    "deco-sites/std/functions/shopifyProductDetailsPage.ts": {
      "inputSchema": {
        "type": "null",
        "title": "Shopify Product Details Page",
      },
      "outputSchema": {
        "type": "object",
        "properties": {
          "data": {
            "$id": "906909daeb7d99a3eb0e05ff52e42d7b9c5b298a",
          },
        },
        "additionalProperties": true,
      },
    },
    "deco-sites/std/functions/shopifyProductList.ts": {
      "inputSchema": {
        "title": "Shopify Product List",
        "type": "object",
        "properties": {
          "query": {
            "type": "string",
            "title": "Query",
            "description": "search term to use on search",
          },
          "count": {
            "type": "number",
            "title": "Count",
            "description": "total number of items to display",
          },
        },
        "required": [
          "query",
          "count",
        ],
      },
      "outputSchema": {
        "type": "object",
        "properties": {
          "data": {
            "$id": "9091c349b893f5d60af9017849735ee9f21e2ba0",
          },
        },
        "additionalProperties": true,
      },
    },
    "deco-sites/std/functions/shopifyProductListingPage.ts": {
      "inputSchema": {
        "title": "Shopify Product Listing Page",
        "type": "object",
        "properties": {
          "query": {
            "type": [
              "string",
              "null",
            ],
            "title": "Query",
            "description": "overides the query term",
          },
          "count": {
            "type": "number",
            "title": "Items per page",
            "description": "number of products per page to display",
          },
        },
        "required": [
          "count",
        ],
      },
      "outputSchema": {
        "type": "object",
        "properties": {
          "data": {
            "$id": "4246b2b7d22c6a301356a5b3c9c5d48523654a0f",
          },
        },
        "additionalProperties": true,
      },
    },
    "deco-sites/std/functions/vtexLegacyProductDetailsPage.ts": {
      "inputSchema": {
        "type": "null",
        "title": "Vtex Legacy Product Details Page",
      },
      "outputSchema": {
        "type": "object",
        "properties": {
          "data": {
            "$id": "906909daeb7d99a3eb0e05ff52e42d7b9c5b298a",
          },
        },
        "additionalProperties": true,
      },
    },
    "deco-sites/std/functions/vtexLegacyProductList.ts": {
      "inputSchema": {
        "title": "Vtex Legacy Product List",
        "type": "object",
        "properties": {
          "query": {
            "type": "string",
            "title": "Query",
            "description": "query to use on search",
          },
          "count": {
            "type": "number",
            "title": "Count",
            "description": "total number of items to display",
          },
          "sort": {
            "type": "string",
            "anyOf": [
              {
                "type": "string",
                "const": "",
              },
              {
                "type": "string",
                "const": "price:desc",
              },
              {
                "type": "string",
                "const": "price:asc",
              },
              {
                "type": "string",
                "const": "orders:desc",
              },
              {
                "type": "string",
                "const": "name:desc",
              },
              {
                "type": "string",
                "const": "name:asc",
              },
              {
                "type": "string",
                "const": "release:desc",
              },
              {
                "type": "string",
                "const": "discount:desc",
              },
            ],
            "title": "Sort",
            "description": "search sort parameter",
          },
        },
        "required": [
          "query",
          "count",
        ],
      },
      "outputSchema": {
        "type": "object",
        "properties": {
          "data": {
            "$id": "9091c349b893f5d60af9017849735ee9f21e2ba0",
          },
        },
        "additionalProperties": true,
      },
    },
    "deco-sites/std/functions/vtexLegacyProductListingPage.ts": {
      "inputSchema": {
        "title": "Vtex Legacy Product Listing Page",
        "type": "object",
        "properties": {
          "term": {
            "type": [
              "string",
              "null",
            ],
            "title": "Term",
            "description": "overides the query term",
          },
          "count": {
            "type": "number",
            "title": "Items per page",
            "description": "number of products per page to display",
          },
          "ft": {
            "type": [
              "string",
              "null",
            ],
            "title": "Ft",
            "description": "FullText term",
          },
          "fq": {
            "type": [
              "string",
              "null",
            ],
            "title": "Fq",
          },
          "map": {
            "type": [
              "string",
              "null",
            ],
            "title": "Map",
            "description": "map param",
          },
        },
        "required": [
          "count",
        ],
      },
      "outputSchema": {
        "type": "object",
        "properties": {
          "data": {
            "$id": "4246b2b7d22c6a301356a5b3c9c5d48523654a0f",
          },
        },
        "additionalProperties": true,
      },
    },
    "deco-sites/std/functions/vtexProductDetailsPage.ts": {
      "inputSchema": {
        "type": "null",
        "title": "Vtex Product Details Page",
      },
      "outputSchema": {
        "type": "object",
        "properties": {
          "data": {
            "$id": "906909daeb7d99a3eb0e05ff52e42d7b9c5b298a",
          },
        },
        "additionalProperties": true,
      },
    },
    "deco-sites/std/functions/vtexProductList.ts": {
      "inputSchema": {
        "title": "Vtex Product List",
        "type": "object",
        "properties": {
          "query": {
            "type": "string",
            "title": "Query",
            "description": "query to use on search",
          },
          "count": {
            "type": "number",
            "title": "Count",
            "description": "total number of items to display",
          },
          "sort": {
            "type": "string",
            "anyOf": [
              {
                "type": "string",
                "const": "",
              },
              {
                "type": "string",
                "const": "price:desc",
              },
              {
                "type": "string",
                "const": "price:asc",
              },
              {
                "type": "string",
                "const": "orders:desc",
              },
              {
                "type": "string",
                "const": "name:desc",
              },
              {
                "type": "string",
                "const": "name:asc",
              },
              {
                "type": "string",
                "const": "release:desc",
              },
              {
                "type": "string",
                "const": "discount:desc",
              },
            ],
            "title": "Sort",
            "description": "search sort parameter",
          },
        },
        "required": [
          "query",
          "count",
        ],
      },
      "outputSchema": {
        "type": "object",
        "properties": {
          "data": {
            "$id": "9091c349b893f5d60af9017849735ee9f21e2ba0",
          },
        },
        "additionalProperties": true,
      },
    },
    "deco-sites/std/functions/vtexProductListingPage.ts": {
      "inputSchema": {
        "title": "Vtex Product Listing Page",
        "type": "object",
        "properties": {
          "query": {
            "type": [
              "string",
              "null",
            ],
            "title": "Query",
            "description": "overides the query term",
          },
          "count": {
            "type": "number",
            "title": "Items per page",
            "description": "number of products per page to display",
          },
        },
        "required": [
          "count",
        ],
      },
      "outputSchema": {
        "type": "object",
        "properties": {
          "data": {
            "$id": "4246b2b7d22c6a301356a5b3c9c5d48523654a0f",
          },
        },
        "additionalProperties": true,
      },
    },
  },
  baseUrl: import.meta.url,
  config,
};

// live — this exposes the manifest so the live server can render components dynamically
context.manifest = manifest;

export default manifest;
